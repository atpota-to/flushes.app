"use strict";(()=>{var e={};e.id=957,e.ids=[957],e.modules={92885:e=>{e.exports=require("@supabase/supabase-js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},88821:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>S,requestAsyncStorage:()=>D,routeModule:()=>w,serverHooks:()=>k,staticGenerationAsyncStorage:()=>E});var o={};r.r(o),r.d(o,{GET:()=>m,dynamic:()=>u});var s=r(49303),a=r(88716),l=r(60670),n=r(87070),i=r(92885);let c=require("@atproto/api");var d=r(74016);let u="force-dynamic",g=[],h=0,f=process.env.NEXT_PUBLIC_SUPABASE_URL||"",p=process.env.SUPABASE_SERVICE_ROLE_KEY||"";async function m(e){let t=new Date().toISOString();console.log(`
=== FEED REQUEST @ ${t} ===`),console.log(`URL: ${e.url}`),console.log(`Headers: ${JSON.stringify(Object.fromEntries(e.headers))}`);try{let t=Date.now(),r=new URL(e.url),o="true"===r.searchParams.get("refresh"),s=r.searchParams.get("before");if(console.log(`Request params: forceRefresh=${o}, beforeCursor=${s||"none"}`),console.log(`Current time: ${new Date(t).toISOString()}`),console.log(`Current cache age: ${t-h}ms, TTL: 60000ms`),console.log(`Cached entries count: ${g.length}`),console.log(`DID resolution cache size: ${b.size}`),console.log(`DB handle cache size: ${$.size}`),console.log("=== END REQUEST INFO ==="),s){if(console.log("Pagination request with cursor:",s),!f||!p)return n.NextResponse.json({entries:[]});{let e=(0,i.createClient)(f,p),{data:t,error:r}=await e.from("flushing_records").select("id, created_at").eq("id",s).single();if(r)return console.error("Error finding cursor record:",r),n.NextResponse.json({entries:[]});console.log(`Fetching entries older than ID ${s}`);let{data:o,error:a}=await e.from("flushing_records").select("*").lt("id",s).order("id",{ascending:!1}).limit(20);if(a)throw Error(`Supabase error: ${a.message}`);console.log(`Found ${o?.length||0} older entries`),o&&o.length>0&&console.log(`Oldest ID in batch: ${o[o.length-1].id}, Newest ID in batch: ${o[0].id}`);let l=(await Promise.all((o||[]).map(async e=>{let t;let r=e.did;if(e.handle&&"unknown"!==e.handle)t=e.handle,console.log(`Using handle from database for ${r}: ${t}`),$.set(r,t);else if($.has(r))t=$.get(r),console.log(`Using cached DB handle for ${r}: ${t}`);else{let e=await y(r);if(e.startsWith("user."))t=e,console.log(`Could not resolve real handle for ${r}, using: ${t}`);else{t=e,console.log(`Successfully resolved handle for ${r}: ${t}`);try{if(f&&p){let e=(0,i.createClient)(f,p),{error:o}=await e.from("flushing_records").update({handle:t}).eq("did",r);if(o)console.error(`Error updating handle in DB: ${o.message}`);else{console.log(`✅ Updated database with resolved handle for ${r}: ${t}`);let{data:o}=await e.from("flushing_records").select("id, did, handle, text, created_at").eq("did",r).limit(1);console.log(`Current DB data for ${r} after update:`,o)}}}catch(e){console.error(`Failed to update handle in database for ${r}:`,e)}}}return(0,d.Lt)(e.text)?null:{id:e.id,uri:e.uri,cid:e.cid,authorDid:r,authorHandle:t,text:(0,d.oO)(e.text),emoji:e.emoji,createdAt:e.created_at}}))).filter(e=>null!==e);return n.NextResponse.json({entries:l})}}if(console.log("Clearing DID resolution cache to force fresh handle resolution"),b.clear(),console.log("Fetching fresh entries"),f&&p){let e;let r=(0,i.createClient)(f,p);console.log(`Querying database for latest 20 entries at ${new Date().toISOString()}...`),console.log("SQL Query: SELECT id, uri, cid, did, text, emoji, created_at, handle FROM flushing_records ORDER BY id DESC LIMIT 20");let{data:o}=await r.from("flushing_records").select("id").order("id",{ascending:!1}).limit(1);console.log("Highest ID in database:",o?.[0]?.id||"unknown");let{data:s}=await r.from("flushing_records").select("id, created_at").order("created_at",{ascending:!1}).limit(1);console.log("Latest timestamp in database:",s?.[0]?.id?`ID ${s[0].id} at ${s[0].created_at}`:"unknown"),console.log("Executing direct query to ensure we get the absolute latest data");try{let{data:t,error:o}=await r.from("flushing_records").select("*").order("id",{ascending:!1}).limit(20);if(o?console.error("❌ Direct SQL query failed:",o):t&&t.length>0&&(console.log("✅ Direct SQL query successful"),console.log(`Direct SQL query found entries with IDs: ${t.slice(0,5).map(e=>e.id).join(", ")}...`),e=t),e&&e.length>0)console.log("Using entries from direct SQL query");else{let{data:t,error:o}=await r.from("flushing_records").select("*").order("id",{ascending:!1}).limit(20);if(o)throw o;t&&t.length>0?(console.log("✅ ID-sorted query successful"),console.log(`ID-sorted query found entries with IDs: ${t.slice(0,5).map(e=>e.id).join(", ")}...`),e=t):console.warn("⚠️ ID-sorted query returned no entries")}}catch(e){console.error("❌ Error with queries:",e)}if(!e)try{let{data:t,error:o}=await r.from("flushing_records").select("*").order("created_at",{ascending:!1}).limit(20);if(o)throw o;t&&t.length>0?(console.log("✅ Time-sorted query successful"),console.log(`Time-sorted query found entries with IDs: ${t.slice(0,5).map(e=>e.id).join(", ")}...`),e=t):console.warn("⚠️ Time-sorted query returned no entries")}catch(e){console.error("❌ Error with time-sorted query:",e)}if(!e){console.log("⚠️ All previous queries failed, trying basic query");let{data:t,error:o}=await r.from("flushing_records").select("*").limit(20);if(o)throw Error(`Basic query error: ${o.message}`);e=t||[]}if(e||(e=[]),console.log(`Final query found ${e.length} entries`),e.length>0&&console.log(`Highest ID: ${e[0].id}, Latest timestamp: ${e[0].created_at}`),console.log(`Retrieved ${e?.length||0} entries from database.`),e&&e.length>0){console.log("Latest entry:",{id:e[0].id,did:e[0].did,handle:e[0].handle,text:e[0].text.substring(0,30)+(e[0].text.length>30?"...":""),created_at:e[0].created_at}),console.log("Recent entries:");for(let t=0;t<Math.min(5,e.length);t++)console.log(`  ${t+1}. [${e[t].id}] ${e[t].did.substring(0,20)}... - "${e[t].text.substring(0,20)}..." (${e[t].created_at})`)}else console.warn("No entries found in database - this may indicate a problem");let a=(await Promise.all((e||[]).map(async e=>{let t;let r=e.did;if(e.handle&&"unknown"!==e.handle)t=e.handle,console.log(`Using handle from database for ${r}: ${t}`),$.set(r,t);else if($.has(r))t=$.get(r),console.log(`Using cached DB handle for ${r}: ${t}`);else{let e=await y(r);if(e.startsWith("user."))t=e,console.log(`Could not resolve real handle for ${r}, using: ${t}`);else{t=e,console.log(`Successfully resolved handle for ${r}: ${t}`);try{if(f&&p){let e=(0,i.createClient)(f,p);await e.from("flushing_records").update({handle:t}).eq("did",r),console.log(`Updated database with resolved handle for ${r}: ${t}`)}}catch(e){console.error(`Failed to update handle in database for ${r}:`,e)}}}if((0,d.Lt)(e.text))return null;let o=(0,d.oO)(e.text);return{id:e.id,uri:e.uri,cid:e.cid,authorDid:r,authorHandle:t,text:o,emoji:e.emoji,createdAt:e.created_at}}))).filter(e=>null!==e);return g=a,h=t,n.NextResponse.json({entries:a})}{console.log("No Supabase credentials, using mock data");let e=function(){let e=["is taking a quick break at work","is reading the news on my phone","is scrolling through bluesky","is just finished a great book chapter","is getting some alone time","is answering nature's call","is contemplating life decisions"],t=[],r=["alice.bsky.social","bob.bsky.social","charlie.bsky.social","dana.bsky.social"],o=["\uD83D\uDEBD","\uD83D\uDCF1","\uD83D\uDCDA","\uD83D\uDCA9","\uD83E\uDDFB","\uD83D\uDCAD","\uD83D\uDE0C"];for(let s=0;s<6;s++){let a=e[s%e.length];(0,d.Lt)(a)||t.push({id:`mock${s+1}`,uri:`at://did:plc:mock${s+1}/im.flushing.right.now/${s+1}`,cid:`bafyreiabc${s+100}`,authorDid:`did:plc:mock${s+1}`,authorHandle:r[s%r.length],text:(0,d.oO)(a),emoji:o[s%o.length],createdAt:new Date(Date.now()-(s+1)*9e5).toISOString()})}return t}();return g=e,h=t,n.NextResponse.json({entries:e})}}catch(e){return console.error("Error fetching feed:",e),n.NextResponse.json({error:"Failed to fetch feed",message:e.message},{status:500})}}new c.BskyAgent({service:"https://bsky.social"});let b=new Map,$=new Map;async function y(e){try{if(b.has(e))return b.get(e);console.log(`Resolving handle for DID: ${e}`);let t=e.startsWith("did:plc:")?e.substring(8,20):e.substring(0,12);if(e&&e.startsWith("did:plc:"))try{let t=`https://plc.directory/${e}`;console.log(`Fetching from ${t}`);let r=await fetch(t,{method:"GET"});if(r.ok){let t=await r.json();if(console.log(`Full PLC data for ${e}:`,JSON.stringify(t)),t&&t.alsoKnownAs&&Array.isArray(t.alsoKnownAs)){for(let r of t.alsoKnownAs)if("string"==typeof r&&r.startsWith("at://")){let t=r.substring(5);if(t&&t.length>0)return console.log(`✅ Successfully resolved ${e} to handle: ${t}`),b.set(e,t),t}}console.warn(`❌ Could not find handle in PLC data for ${e}`)}else console.warn(`❌ PLC fetch failed: ${r.status} ${r.statusText}`)}catch(e){console.error(`❌ Error fetching from PLC directory:`,e)}try{console.log(`Trying Bluesky API for DID: ${e}`);let t=new c.BskyAgent({service:"https://bsky.social"});await t.login({identifier:"",password:""});let r=await t.getProfile({actor:e});if(r&&r.success&&r.data&&r.data.handle){let t=r.data.handle;return console.log(`✅ Successfully resolved ${e} to handle via Bluesky API: ${t}`),b.set(e,t),t}console.warn(`❌ Bluesky API resolution failed for ${e}`)}catch(e){console.error(`❌ Error with Bluesky API:`,e)}return console.log(`❌ All resolution methods failed for ${e}, using fallback: ${t}`),b.set(e,t),t}catch(t){return console.error(`❌ Unexpected error resolving handle for ${e}:`,t),e.substring(0,12)}}let w=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/bluesky/feed/route",pathname:"/api/bluesky/feed",filename:"route",bundlePath:"app/api/bluesky/feed/route"},resolvedPagePath:"/Users/dame/Library/Mobile Documents/com~apple~CloudDocs/Software/flushes/app/src/app/api/bluesky/feed/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:D,staticGenerationAsyncStorage:E,serverHooks:k}=w,x="/api/bluesky/feed/route";function S(){return(0,l.patchFetch)({serverHooks:k,staticGenerationAsyncStorage:E})}},74016:(e,t,r)=>{r.d(t,{Lt:()=>a,oO:()=>l});let o=["slur","racist","bigot","bigotry","homophobic","transphobic","fuck","damn","ass","asshole","bitch","kill","murder","attack","violence","harm","hurt","retard","retarded","idiot","stupid","dumb","penis","vagina","dick","cock","pussy","sex","masturbate","orgasm","horny","erection","blowjob","handjob","viagra","cialis","enlarge","cryptocurrency","bitcoin","ethereum","make money","get rich","earn fast","pyramid","scheme","discord.gg","telegram.me"],s=[/\bc[hH][iIl1][nN][kKsS]?\b/,/\bc[oO]{2}[nN][sS]?\b/,/\bf[aA][gG]{1,2}([oOeE][tT]?|[iIyY][nNeE]?)?s?\b/,/\bk[iIyY][kK][eE][sS]?\b/,/\bn[iIl1oO][gG]{2}([aAeE][rR]?|[lL][eE][tT]|[nNoO][gG])?s?\b/,/\bn[iIl1oO][gG]{2}[aAeE][sS]\b/,/\bt[rR][aA][nN][nN][iIyY][eE]?[sS]?\b/];function a(e){if(!e)return!1;let t=e.toLowerCase().replace(/0/g,"o").replace(/1/g,"i").replace(/3/g,"e").replace(/4/g,"a").replace(/5/g,"s").replace(/\$/g,"s").replace(/@/g,"a").replace(/!/g,"i").replace(/\*/g,"").replace(/\./g,"").replace(/-/g,"").replace(/_/g,"").replace(/\s+/g," ");for(let t of s)if(t.test(e))return!0;return o.some(e=>{if(RegExp(`\\b${e}\\b`,"i").test(t))return!0;let r=e.split("").join("\\s*");return!!RegExp(`\\b${r}\\b`,"i").test(t)||e.length<=4&&RegExp(e,"i").test(t)})}function l(e){if(!e)return e;let t=e;return o.forEach(e=>{let r=RegExp(`\\b${e}\\b`,"gi");t=t.replace(r,"*".repeat(e.length))}),o.forEach(e=>{if(e.length>2){let r=e.split("").join("\\s*"),o=RegExp(`\\b${r}\\b`,"gi");t=t.replace(o,e=>"*".repeat(e.replace(/\s+/g,"").length))}}),o.filter(e=>e.length<=4).forEach(e=>{let r=RegExp(`(?<!\\w)${e}(?!\\w)`,"gi");t=t.replace(r,"*".repeat(e.length))}),t}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[276,972],()=>r(88821));module.exports=o})();