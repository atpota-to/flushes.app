"use strict";(()=>{var e={};e.id=728,e.ids=[728],e.modules={92885:e=>{e.exports=require("@supabase/supabase-js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},67463:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>w,patchFetch:()=>x,requestAsyncStorage:()=>$,routeModule:()=>b,serverHooks:()=>R,staticGenerationAsyncStorage:()=>E});var r={};o.r(r),o.d(r,{GET:()=>f,OPTIONS:()=>g,POST:()=>h,dynamic:()=>u});var s=o(49303),n=o(88716),a=o(60670),i=o(87070),l=o(92885),c=o(74016);let u="force-dynamic",p=["\uD83D\uDEBD","\uD83E\uDDFB","\uD83D\uDCA9","\uD83D\uDCA8","\uD83D\uDEBE","\uD83E\uDDFC","\uD83E\uDEA0","\uD83D\uDEBB","\uD83E\uDE78","\uD83D\uDCA7","\uD83D\uDCA6","\uD83D\uDE0C","\uD83D\uDE23","\uD83E\uDD22","\uD83E\uDD2E","\uD83E\uDD74","\uD83D\uDE2E‍\uD83D\uDCA8","\uD83D\uDE33","\uD83D\uDE35","\uD83C\uDF3E","\uD83C\uDF66","\uD83D\uDCF1","\uD83D\uDCD6","\uD83D\uDCAD","1️⃣","2️⃣","\uD83D\uDFE1","\uD83D\uDFE4"],d="im.flushing.right.now",D=process.env.NEXT_PUBLIC_SUPABASE_URL||"",m=process.env.SUPABASE_SERVICE_ROLE_KEY||"";async function f(e){try{let{searchParams:t}=new URL(e.url),o=t.get("handle");if(!o)return i.NextResponse.json({error:"Missing handle parameter"},{status:400});if("mackuba.eu"===o){console.log("SPECIAL CASE: mackuba.eu detected, using hardcoded solution");try{let e=await fetch("https://public.api.bsky.app/xrpc/com.atproto.identity.resolveHandle?handle=mackuba.eu");if(!e.ok)return i.NextResponse.json({error:"Failed to resolve mackuba.eu handle"},{status:e.status});let t=(await e.json()).did,o=await fetch("https://public.api.bsky.app/xrpc/app.bsky.actor.getProfile?actor=mackuba.eu"),r=null;o.ok&&(r=await o.json());let s=`https://lab.martianbase.net/xrpc/com.atproto.repo.listRecords?repo=${encodeURIComponent(t)}&collection=im.flushing.right.now&limit=50`;console.log(`Making direct request to: ${s}`);let n=await fetch(s,{headers:{Accept:"application/json"}});if(!n.ok){if(404===n.status)return i.NextResponse.json({entries:[],count:0,profile:r,emojiStats:[],did:t,handle:"mackuba.eu",directUrl:s,emptyCollection:!0});return i.NextResponse.json({error:`Failed to fetch mackuba.eu records: ${n.statusText}`,directUrl:s},{status:n.status})}let a=await n.json(),l=a.records.map(e=>{let o=e.value.text||"";return(0,c.Lt)(o)?null:{id:e.uri,uri:e.uri,cid:e.cid,did:t,text:(0,c.oO)(o),emoji:e.value.emoji||"\uD83D\uDEBD",created_at:e.value.createdAt}}).filter(e=>null!==e),u=new Map;l.forEach(e=>{let t=e.emoji?.trim()||"\uD83D\uDEBD";p.includes(t)?u.set(t,(u.get(t)||0)+1):u.set("\uD83D\uDEBD",(u.get("\uD83D\uDEBD")||0)+1)});let d=Array.from(u.entries()).map(([e,t])=>({emoji:e,count:t})).sort((e,t)=>t.count-e.count);return i.NextResponse.json({entries:l,count:l.length,cursor:a.cursor,profile:r,emojiStats:d,serviceEndpoint:"https://lab.martianbase.net",directUrl:s,specialCase:!0})}catch(e){return console.error("Error in special handling for mackuba.eu:",e),i.NextResponse.json({error:`Special handling for mackuba.eu failed: ${e.message}`,workingUrl:"https://lab.martianbase.net/xrpc/com.atproto.repo.listRecords?repo=did:plc:oio4hkxaop4ao4wz2pp3f4cr&collection=im.flushing.right.now&limit=100"},{status:500})}}if("plumber.flushing.im"===o)return console.log("Redirecting from old plumber.flushing.im handle to plumber.flushes.app"),i.NextResponse.redirect(new URL("/profile/plumber.flushes.app",e.url));let r=o,s=null;if(!o.startsWith("did:"))try{let e="https://public.api.bsky.app/xrpc/com.atproto.identity.resolveHandle";console.log(`Resolving handle ${o} using ${e}`);let t=await fetch(`${e}?handle=${encodeURIComponent(o)}`);if(!t.ok)return i.NextResponse.json({error:`Failed to resolve handle: ${t.statusText}`},{status:t.status});r=(await t.json()).did;try{let e=await fetch(`https://public.api.bsky.app/xrpc/app.bsky.actor.getProfile?actor=${encodeURIComponent(r)}`);e.ok?(s=await e.json(),console.log(`Fetched profile data for ${o}: ${s.description?"Has description":"No description"}`)):console.warn(`Failed to fetch profile data: ${e.statusText}`)}catch(e){console.warn(`Error fetching profile data: ${e.message}`)}}catch(e){return i.NextResponse.json({error:`Failed to resolve handle: ${e.message}`},{status:500})}let n="https://bsky.social",a=null;try{console.log(`Looking up PDS endpoint for DID: ${r}`);let e=await fetch(`https://plc.directory/${r}/data`);if(e.ok){let t=await e.json();if(console.log(`Got PLC directory data for ${r}`),t&&t.service){let e=t.service.find(e=>"AtprotoPersonalDataServer"===e.type||"AtprotoDataServer"===e.type);if(e&&e.endpoint){n=e.endpoint;try{a=new URL(e.endpoint).hostname,console.log(`Found PDS service for ${o} at ${n} (${a})`)}catch(t){console.warn(`Could not parse service URL: ${e.endpoint}`)}}}}else console.warn(`PLC directory lookup failed for ${r}: ${e.status} ${e.statusText}`)}catch(e){console.warn(`Failed to get service endpoint from PLC directory: ${e.message}`)}try{let e;console.log(`PROFILE DEBUG:
  - Handle: ${o}
  - DID: ${r}
  - PDS Service Endpoint: ${n}
  - Service PDS Host: ${a||"unknown"}
      `),e=n.endsWith("/xrpc")?`${n}/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`:`${n}/xrpc/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`,console.log(`Fetching records from ${e}`);let t=await fetch(e,{headers:{Accept:"application/json"}});if(!t.ok){console.warn(`Failed to get records from ${n}`);try{let e=await t.text();console.error(`Error response from ${n}: ${e}`)}catch(e){console.error(`Could not read error response: ${e}`)}if("https://public.api.bsky.app"!==n){if(a)try{if(console.log(`Trying direct PDS domain: https://${a}`),"mackuba.eu"===o){console.log("Detected mackuba.eu, using known working endpoint");try{let e=`https://lab.martianbase.net/xrpc/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`;console.log(`Trying special URL: ${e}`);let t=await fetch(e,{headers:{Accept:"application/json"}});if(t.ok){console.log("Special URL succeeded!");let e=await t.json(),o=e.records.map(e=>{let t=e.value.text||"";return(0,c.Lt)(t)?null:{id:e.uri,uri:e.uri,cid:e.cid,did:r,text:(0,c.oO)(t),emoji:e.value.emoji||"\uD83D\uDEBD",created_at:e.value.createdAt}}).filter(e=>null!==e),n=new Map;o.forEach(e=>{let t=e.emoji?.trim()||"\uD83D\uDEBD";p.includes(t)?n.set(t,(n.get(t)||0)+1):n.set("\uD83D\uDEBD",(n.get("\uD83D\uDEBD")||0)+1)});let a=Array.from(n.entries()).map(([e,t])=>({emoji:e,count:t})).sort((e,t)=>t.count-e.count);return i.NextResponse.json({entries:o,count:o.length,cursor:e.cursor,profile:s,emojiStats:a,serviceEndpoint:"https://lab.martianbase.net",specialHandling:!0})}console.warn(`Special URL failed: ${t.status}`)}catch(e){console.error(`Error with special URL: ${e}`)}}let e=[`https://${a}/xrpc/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`,`https://${a}/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`,...a.includes("martianbase.net")?[`https://lab.martianbase.net/xrpc/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`]:[]],t=null,n=null,l=!1;for(let o of e)try{if(console.log(`Attempting URL: ${o}`),(t=await fetch(o,{headers:{Accept:"application/json"}})).ok){console.log(`Success with URL: ${o}`),n=await t.json(),l=!0;break}console.warn(`Failed with URL ${o}: ${t?.status||"unknown status"}`)}catch(e){console.error(`Error trying URL ${o}: ${e}`)}if(l&&n){console.log(`Successfully accessed records directly from PDS domain: ${a}`);let e=n.records.map(e=>{let t=e.value.text||"";return(0,c.Lt)(t)?null:{id:e.uri,uri:e.uri,cid:e.cid,did:r,text:(0,c.oO)(t),emoji:e.value.emoji||"\uD83D\uDEBD",created_at:e.value.createdAt}}).filter(e=>null!==e),t=new Map;e.forEach(e=>{let o=e.emoji?.trim()||"\uD83D\uDEBD";p.includes(o)?t.set(o,(t.get(o)||0)+1):t.set("\uD83D\uDEBD",(t.get("\uD83D\uDEBD")||0)+1)});let o=Array.from(t.entries()).map(([e,t])=>({emoji:e,count:t})).sort((e,t)=>t.count-e.count);return i.NextResponse.json({entries:e,count:e.length,cursor:n.cursor,profile:s,emojiStats:o,serviceEndpoint:`https://${a}`,directPds:!0})}if(t)try{let e=await t.text();console.warn(`PDS direct access failed: ${e}`)}catch(e){console.warn("PDS direct access failed: Could not read response text")}else console.warn("PDS direct access failed: No valid response")}catch(e){console.error(`Error with direct PDS domain access: ${e}`)}if(o.includes(".")&&!o.endsWith("bsky.social")&&!o.endsWith("flushes.app")&&!o.endsWith("flushing.im")){let e=o.split(".").slice(1).join(".");try{console.log(`Trying handle domain access: https://${e}`);let t=[`https://${e}/xrpc/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`,`https://${e}/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`],o=null,n=null,a=!1;for(let e of t)try{if(console.log(`Attempting URL: ${e}`),(o=await fetch(e,{headers:{Accept:"application/json"}})).ok){console.log(`Success with URL: ${e}`),n=await o.json(),a=!0;break}console.warn(`Failed with URL ${e}: ${o?.status||"unknown status"}`)}catch(t){console.error(`Error trying URL ${e}: ${t}`)}if(a&&n){console.log(`Successfully accessed records from handle domain: ${e}`);let t=n.records.map(e=>{let t=e.value.text||"";return(0,c.Lt)(t)?null:{id:e.uri,uri:e.uri,cid:e.cid,did:r,text:(0,c.oO)(t),emoji:e.value.emoji||"\uD83D\uDEBD",created_at:e.value.createdAt}}).filter(e=>null!==e),o=new Map;t.forEach(e=>{let t=e.emoji?.trim()||"\uD83D\uDEBD";p.includes(t)?o.set(t,(o.get(t)||0)+1):o.set("\uD83D\uDEBD",(o.get("\uD83D\uDEBD")||0)+1)});let a=Array.from(o.entries()).map(([e,t])=>({emoji:e,count:t})).sort((e,t)=>t.count-e.count);return i.NextResponse.json({entries:t,count:t.length,cursor:n.cursor,profile:s,emojiStats:a,serviceEndpoint:`https://${e}`,handleDomain:!0})}if(o)try{let e=await o.text();console.warn(`Handle domain access failed: ${e}`)}catch(e){console.warn("Handle domain access failed: Could not read response text")}else console.warn("Handle domain access failed: No valid response")}catch(e){console.error(`Error with handle domain access: ${e}`)}}console.warn("All direct approaches failed, trying public API fallback");let e=`https://public.api.bsky.app/xrpc/com.atproto.repo.listRecords?repo=${encodeURIComponent(r)}&collection=${encodeURIComponent(d)}&limit=50`,t=await fetch(e,{headers:{Accept:"application/json"}});if(!t.ok)return i.NextResponse.json({error:`Failed to fetch records: ${t.statusText}`},{status:t.status});let n=await t.json(),l=n.records.map(e=>{let t=e.value.text||"";return(0,c.Lt)(t)?null:{id:e.uri,uri:e.uri,cid:e.cid,did:r,text:(0,c.oO)(t),emoji:e.value.emoji||"\uD83D\uDEBD",created_at:e.value.createdAt}}).filter(e=>null!==e),u=new Map;l.forEach(e=>{if(e.emoji){let t=e.emoji.trim()||"\uD83D\uDEBD";p.includes(t)?u.set(t,(u.get(t)||0)+1):u.set("\uD83D\uDEBD",(u.get("\uD83D\uDEBD")||0)+1)}else u.set("\uD83D\uDEBD",(u.get("\uD83D\uDEBD")||0)+1)});let D=Array.from(u.entries()).map(([e,t])=>({emoji:e,count:t})).sort((e,t)=>t.count-e.count);return i.NextResponse.json({entries:l,count:l.length,cursor:n.cursor,profile:s,emojiStats:D,serviceEndpoint:"https://public.api.bsky.app",fallback:!0})}return i.NextResponse.json({error:`Failed to fetch records: ${t.statusText}`},{status:t.status})}let l=await t.json(),u=l.records.map(e=>{let t=e.value.text||"";return(0,c.Lt)(t)?null:{id:e.uri,uri:e.uri,cid:e.cid,did:r,text:(0,c.oO)(t),emoji:e.value.emoji||"\uD83D\uDEBD",created_at:e.value.createdAt}}).filter(e=>null!==e),D=new Map;u.forEach(e=>{if(e.emoji){let t=e.emoji.trim()||"\uD83D\uDEBD";p.includes(t)?D.set(t,(D.get(t)||0)+1):D.set("\uD83D\uDEBD",(D.get("\uD83D\uDEBD")||0)+1)}else D.set("\uD83D\uDEBD",(D.get("\uD83D\uDEBD")||0)+1)});let m=Array.from(D.entries()).map(([e,t])=>({emoji:e,count:t})).sort((e,t)=>t.count-e.count);return i.NextResponse.json({entries:u,count:u.length,cursor:l.cursor,profile:s,emojiStats:m,serviceEndpoint:n,servicePds:a})}catch(e){if(console.error("Error fetching records:",e),D&&m){console.log("Falling back to Supabase records");let e=(0,l.createClient)(D,m),{data:t,error:o,count:n}=await e.from("flushing_records").select("*",{count:"exact"}).eq("did",r).order("created_at",{ascending:!1}).limit(50);if(o)return i.NextResponse.json({error:`Database error: ${o.message}`},{status:500});let a=(t||[]).map(e=>(0,c.Lt)(e.text)?null:{...e,text:(0,c.oO)(e.text||"")}).filter(e=>null!==e),u=new Map;a.forEach(e=>{if(e.emoji){let t=e.emoji.trim()||"\uD83D\uDEBD";p.includes(t)?u.set(t,(u.get(t)||0)+1):u.set("\uD83D\uDEBD",(u.get("\uD83D\uDEBD")||0)+1)}else u.set("\uD83D\uDEBD",(u.get("\uD83D\uDEBD")||0)+1)});let d=Array.from(u.entries()).map(([e,t])=>({emoji:e,count:t})).sort((e,t)=>t.count-e.count);return i.NextResponse.json({entries:a,count:a.length,profile:s,emojiStats:d,source:"supabase",did:r})}if(e instanceof Error&&e.message.includes("404"))return console.log(`Returning empty entries list instead of 404 error for ${r}`),i.NextResponse.json({entries:[],count:0,profile:s,emojiStats:[],did:r,handle:o,serviceEndpoint:n,servicePds:a,emptyCollection:!0});return i.NextResponse.json({error:`Failed to fetch records: ${e.message}`,did:r,handle:o,serviceEndpoint:n,servicePds:a},{status:500})}}catch(e){return console.error("Profile statuses API error:",e),i.NextResponse.json({error:"Failed to fetch profile statuses",details:e.message},{status:500})}}async function h(e){try{let{accessToken:t,dpopToken:o,handle:r,pdsEndpoint:s}=await e.json();if(!t||!o)return i.NextResponse.json({error:"Missing required parameters"},{status:400});let n=s?`${s}/xrpc`:"https://public.api.bsky.app/xrpc";console.log(`Using API URL for profile fetch: ${n}`);let a=r,l=r,c=r;"plumber.flushing.im"===r?(console.log("Converting old plumber.flushing.im handle to plumber.flushes.app in API"),c="plumber.flushes.app",l="plumber.flushes.app"):c=r;try{if(c.startsWith("did:"))try{let e=await fetch(`https://plc.directory/${c}/data`);if(e.ok){let t=await e.json();if(t.alsoKnownAs&&t.alsoKnownAs.length>0){let e=t.alsoKnownAs[0];e.startsWith("at://")&&(l=e.substring(5),console.log(`Resolved DID ${r} to handle ${l}`))}}}catch(e){console.warn("Failed to resolve handle from PLC directory:",e)}else{let e=await fetch(`https://public.api.bsky.app/xrpc/com.atproto.identity.resolveHandle?handle=${encodeURIComponent(c)}`);if(!e.ok)throw console.error(`Failed to resolve handle ${c}:`,await e.text()),Error(`Failed to resolve handle: ${e.statusText}`);a=(await e.json()).did,l=c,console.log(`Resolved handle ${c} to DID ${a}`)}let e=`${n}/com.atproto.repo.describeRepo?repo=${encodeURIComponent(a)}`;console.log(`Making profile request to: ${e}`);let u=await fetch(e,{method:"GET",headers:{Authorization:`DPoP ${t}`,DPoP:o}});if(401===u.status){let e=u.headers.get("DPoP-Nonce");if(e)return console.log("Received nonce from profile request:",e),i.NextResponse.json({error:"use_dpop_nonce",nonce:e},{status:401})}if(u.ok){let e=await u.json();return console.log("Successfully fetched profile data"),s&&"https://bsky.social"!==s&&"https://public.api.bsky.app"!==s&&e.handle&&(console.log(`Using handle from PDS response: ${e.handle} instead of ${l}`),l=e.handle),i.NextResponse.json({did:a,handle:l})}console.error(`Profile request failed with status: ${u.status}`);let p=await u.text().catch(()=>"Failed to read response");return console.error("Error from profile request:",p),i.NextResponse.json({did:a,handle:l,error:`Profile request failed with status: ${u.status}`})}catch(e){return console.error("Profile resolution error:",e),i.NextResponse.json({did:a||"unknown_did",handle:l||"unknown",error:e.message})}}catch(e){return console.error("Top-level profile fetch error:",e),i.NextResponse.json({did:"unknown_did",handle:"unknown",error:e.message})}}async function g(){return new i.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization, DPoP"}})}let b=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/bluesky/profile/route",pathname:"/api/bluesky/profile",filename:"route",bundlePath:"app/api/bluesky/profile/route"},resolvedPagePath:"/Users/dame/Library/Mobile Documents/com~apple~CloudDocs/Software/flushes/app/src/app/api/bluesky/profile/route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:$,staticGenerationAsyncStorage:E,serverHooks:R}=b,w="/api/bluesky/profile/route";function x(){return(0,a.patchFetch)({serverHooks:R,staticGenerationAsyncStorage:E})}},74016:(e,t,o)=>{o.d(t,{Lt:()=>n,oO:()=>a});let r=["slur","racist","bigot","bigotry","homophobic","transphobic","fuck","damn","ass","asshole","bitch","kill","murder","attack","violence","harm","hurt","retard","retarded","idiot","stupid","dumb","penis","vagina","dick","cock","pussy","sex","masturbate","orgasm","horny","erection","blowjob","handjob","viagra","cialis","enlarge","cryptocurrency","bitcoin","ethereum","make money","get rich","earn fast","pyramid","scheme","discord.gg","telegram.me"],s=[/\bc[hH][iIl1][nN][kKsS]?\b/,/\bc[oO]{2}[nN][sS]?\b/,/\bf[aA][gG]{1,2}([oOeE][tT]?|[iIyY][nNeE]?)?s?\b/,/\bk[iIyY][kK][eE][sS]?\b/,/\bn[iIl1oO][gG]{2}([aAeE][rR]?|[lL][eE][tT]|[nNoO][gG])?s?\b/,/\bn[iIl1oO][gG]{2}[aAeE][sS]\b/,/\bt[rR][aA][nN][nN][iIyY][eE]?[sS]?\b/];function n(e){if(!e)return!1;let t=e.toLowerCase().replace(/0/g,"o").replace(/1/g,"i").replace(/3/g,"e").replace(/4/g,"a").replace(/5/g,"s").replace(/\$/g,"s").replace(/@/g,"a").replace(/!/g,"i").replace(/\*/g,"").replace(/\./g,"").replace(/-/g,"").replace(/_/g,"").replace(/\s+/g," ");for(let t of s)if(t.test(e))return!0;return r.some(e=>{if(RegExp(`\\b${e}\\b`,"i").test(t))return!0;let o=e.split("").join("\\s*");return!!RegExp(`\\b${o}\\b`,"i").test(t)||e.length<=4&&RegExp(e,"i").test(t)})}function a(e){if(!e)return e;let t=e;return r.forEach(e=>{let o=RegExp(`\\b${e}\\b`,"gi");t=t.replace(o,"*".repeat(e.length))}),r.forEach(e=>{if(e.length>2){let o=e.split("").join("\\s*"),r=RegExp(`\\b${o}\\b`,"gi");t=t.replace(r,e=>"*".repeat(e.replace(/\s+/g,"").length))}}),r.filter(e=>e.length<=4).forEach(e=>{let o=RegExp(`(?<!\\w)${e}(?!\\w)`,"gi");t=t.replace(o,"*".repeat(e.length))}),t}}};var t=require("../../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),r=t.X(0,[276,972],()=>o(67463));module.exports=r})();